{"version":3,"sources":["Components/Header.js","Components/Icons.js","data.js","Components/GuyWorking.js","Views/HomeView.js","Components/GirlLooking.js","Views/AboutView.js","Views/ContactView.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","activeClassName","exact","Icons","project","setClicky","iconCloseHandler","undefined","div","layoutId","id","onClick","icon","transition","delay","initial","opacity","animate","duration","console","log","title","a","href","target","style","transform","x","y","exit","projects","GuyWorking","lottie","loadAnimation","container","this","animBox","renderer","loop","autoplay","animationData","ref","React","Component","HomeView","useState","clicky","type","stiffness","alignSelf","filter","map","key","whileHover","dealieHandler","GirlLooking","AboutView","ContactView","width","margin","yoyo","Infinity","App","location","useLocation","exitBeforeEnter","pathname","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a713e5dc.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\nimport { NavLink, Link } from 'react-router-dom'\n\n\nconst Header = () => {\n    \n    return (\n        <div className=\"container-header\">\n            <Link to=\"/\" className=\"container-header-title\">Joshua Hamlet</Link>\n            <div className=\"container-header-links\">\n                <NavLink activeClassName=\"header-links-active\" to=\"/\" exact>Projects</NavLink>\n                <NavLink activeClassName=\"header-links-active\" to=\"/contact\" >Contact</NavLink>\n                <NavLink activeClassName=\"header-links-active\" to=\"/about\" >About</NavLink>\n            </div>\n\n        </div>\n    )\n    \n}\n\nexport default Header","import React from \"react\"\nimport { motion } from 'framer-motion'\nimport { FaArrowCircleRight } from 'react-icons/fa'\nimport './Icons.css'\n\nconst Icons = ({ project, setClicky }) => {\n\n    const iconCloseHandler = () => {\n        setClicky(undefined)\n    }\n\n    return (\n        <>\n        <motion.div \n        layoutId={`icon-${project.id}`} className=\"icon-big\">\n\n            <motion.div className=\"icon-title-box\">\n            <motion.div onClick={iconCloseHandler} className=\"icon-title-icon\" layoutId={`icon-title-${project.id}`}>\n                {project.icon}\n            </motion.div>\n\n                <motion.div\n                className=\"icon-title-text\"\n                transition={{ delay: 0.5 }}\n                >\n                    <motion.div \n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ duration: 0.2, delay: 0.5 }} \n                    className=\"icon-title-text-title\" \n                    >\n                    {console.log(project.title)}\n                    {project.title}\n                    </motion.div>\n\n                    <motion.a\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ duration: 0.2, delay: .75 }} \n                    className=\"icon-title-text-link\"\n                    href=\"https:legendofsellda.netlify.app\" target=\"_blank\"\n                    >\n                    go to project  <FaArrowCircleRight style={{transform: \"translateY(2px)\"}} /></motion.a>\n                \n                </motion.div>\n            </motion.div>\n\n            <motion.div className=\"icon-feature-box\"\n            initial={{ x: \"-100%\", opacity: 1 }}\n            animate={{ x: 0, opacity: 1 }}\n            transition={{ duration: 0.2, delay: 0.75 }}\n            >\n                <motion.div className=\"icon-feature-box-item\"\n                 initial={{ x: \"-200%\", opacity: 1 }}\n                 animate={{ x: 0, opacity: 1 }}\n                 transition={{ delay: 1.2 }}\n                 >bloop</motion.div>\n            </motion.div>\n\n            <motion.div className=\"icon-description-box\"\n            initial={{ y: \"100%\", opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ duration: 0.5, delay: 0.75 }}\n            >\n                bloop uh doop and shoop duh whoop\n                bloop uh doop and shoop duh whoop\n                bloop uh doop and shoop duh whoop\n                bloop uh doop and shoop duh whoop\n                bloop uh doop and shoop duh whoop\n                bloop uh doop and shoop duh whoop\n            </motion.div>\n\n        </motion.div>\n\n        <motion.div \n        onClick={iconCloseHandler}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0, transition: { duration: 0.15 } }}\n        transition={{ duration: 0.2, delay: 0.15 }}\n        layoutId=\"icon-background\" className=\"icon-background\"/>\n        </>\n    )\n}\n\nexport default Icons","import React from 'react'\n\nimport { GiSpinningSword } from 'react-icons/gi'\nimport { IoMdPizza } from 'react-icons/io'\nimport { CgNotes } from 'react-icons/cg'\nimport { AiOutlineDashboard } from 'react-icons/ai'\n\nexport const projects = [\n    {\n        id: \"L\",\n        title: \"Legend of Sellda\",\n        icon: <GiSpinningSword/>,\n    },\n    {\n        id: \"P\",\n        title: \"Pomodoro Pizza party\",\n        icon: <IoMdPizza/>,\n    },\n    {\n        id: \"T\",\n        title: \"TBD Project\",\n        icon: <CgNotes/>,\n    },\n    {\n        id: \"G\",\n        title: \"TBD Project\",\n        icon: <AiOutlineDashboard/>,\n    }\n]","import React from 'react'\nimport lottie from 'lottie-web';\nimport animationData from '../lottie/working.json'\nimport './GuyWorking.css'\n\nlet animObj = null;\n\nclass GuyWorking extends React.Component {\n  componentDidMount() {\n    console.log('componentDidMount');\n    \n    //call the loadAnimation to start the animation\n    animObj = lottie.loadAnimation({\n      container: this.animBox, // the dom element that will contain the animation\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: animationData // the path to the animation json\n    });\n  }\n  \n  render() {\n    return (\n        <div className=\"guy-working\" ref={ ref => this.animBox = ref}/>\n    );\n  }\n}\n\nexport default GuyWorking;","import React, { useState } from 'react';\nimport { motion, AnimateSharedLayout, AnimatePresence } from 'framer-motion'\nimport './HomeView.css';\nimport Dealie from '../Components/Icons'\nimport { projects } from '../data'\nimport GuyWorking from '../Components/GuyWorking'\n\nconst HomeView = () => {\n\n  const [clicky, setClicky] = useState()\n\n  const dealieHandler = (project) => {\n    console.log(\"PROJECT\",project)\n    setClicky({...project})\n  }\n\n  console.log(\"CLICKY\",clicky)\n  \n  return (\n    <>\n    \n    <motion.div \n    className=\"container\"\n    initial={{x: \"100vw\"}}\n    animate={{x: 0}}\n    transition={{ type: \"spring\", stiffness: 100 }}\n    exit={{x: \"-100vw\"}}\n    >\n      <div className=\"guy-working-container\">\n        <GuyWorking style={{alignSelf: \"flex-start\", filter: \"drop-shadow(30px 10px 4px rgba(0, 0, 0, .80)\"}}/>\n      </div>\n      <AnimateSharedLayout type=\"crossfade\">\n\n    <div className=\"icon-row\">\n        \n      { projects.map(project => (\n      \n        <motion.div\n        key={project.id}\n        whileHover={{\n          y: [0, -5, 0, -5, 0, 0, -3, 0, 0, -5, 0, -5, 0],\n          transition: {duration: 3}\n        }} \n        className=\"icon-small\" \n        layoutId={`icon-${project.id}`}\n        onClick={() => {dealieHandler(project)}}\n        >\n          <motion.div className=\"icon-title\" layoutId={`icon-title-${project.id}`}>\n            {project.icon}\n          </motion.div>\n\n        </motion.div>\n\n      ))} \n\n        \n      </div>\n      <AnimatePresence>\n          {\n          clicky ? \n          <Dealie setClicky={setClicky} project={clicky}/>\n          : \"\"\n          } \n        </AnimatePresence>\n      </AnimateSharedLayout>\n    </motion.div>\n    </>\n  );\n}\n\nexport default HomeView;\n","import React from 'react'\nimport lottie from 'lottie-web';\nimport animationData from '../lottie/blob.json'\nimport './Blob.css'\n\nlet animObj = null;\n\nclass GirlLooking extends React.Component {\n  componentDidMount() {\n    console.log('componentDidMount');\n    \n    //call the loadAnimation to start the animation\n    animObj = lottie.loadAnimation({\n      container: this.animBox, // the dom element that will contain the animation\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: animationData // the path to the animation json\n    });\n  }\n  \n  render() {\n    return (\n        <div className=\"blob\" ref={ ref => this.animBox = ref}/>\n    );\n  }\n}\n\nexport default GirlLooking;","import React from 'react'\nimport { motion } from 'framer-motion'\nimport GirlLooking from '../Components/GirlLooking'\nimport './AboutView.css'\n\n\nconst AboutView = () => {\n\n    return (\n        <motion.div\n        className=\"container-about\"\n        initial={{x: \"100vw\"}}\n        animate={{x: 0}}\n        exit={{x: \"-100vw\"}}\n        transition={{ type: \"spring\", stiffness: 100 }}\n        >\n        <div className=\"blob-container\">\n        <GirlLooking>BLahblah</GirlLooking>\n        </div>\n        </motion.div>\n    )\n}\n\nexport default AboutView","import React from 'react'\nimport { motion } from 'framer-motion'\nimport lottie from 'lottie-web';\nimport animationData from '../lottie/panda-no-bg.json'\nimport { TiSocialGithubCircular } from 'react-icons/ti'\nimport { TiSocialLinkedinCircular } from 'react-icons/ti'\nimport './ContactView.css'\n\nlet animObj = null;\n\nclass ContactView extends React.Component {\n  componentDidMount() {\n    console.log('componentDidMount');\n    \n    //call the loadAnimation to start the animation\n    animObj = lottie.loadAnimation({\n      container: this.animBox, // the dom element that will contain the animation\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: animationData // the path to the animation json\n    });\n  }\n  \n  render() {\n    return (\n        <motion.div\n                 className=\"container\"\n                 initial={{x: \"100vw\"}}\n                 animate={{x: 0}}\n                 transition={{ type: \"spring\", stiffness: 100 }}\n                 exit={{x: \"-100vw\"}}\n                 >\n        {/* This is you wrapper where animation will load */}\n        <div className=\"panda-container\">\n        <div style={{width: \"400px\", margin: '0 auto', filter: \"drop-shadow(30px 10px 4px rgba(0, 0, 0,.80)\"}} ref={ ref => this.animBox = ref}/>\n        <div className=\"contact-icon-git\">\n            <motion.div \n            animate={{x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, -2, 0, 2, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}\n            transition={{duration: 2.5, yoyo: Infinity}}\n            >\n                <TiSocialGithubCircular/>\n            </motion.div>\n        </div >\n        <div className=\"contact-icon-lin\">    \n            <motion.div\n            animate={{x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, -2, 0, 2, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}\n            transition={{duration: 2.5, delay: 1.25, yoyo: Infinity}}\n            >\n                <TiSocialLinkedinCircular/>\n        </motion.div>    \n        </div>\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nexport default ContactView;\n\n\n\n\n\n\n// const ContactView = (props) => {\n    \n//     useEffect(() => {\n//       lottie.loadAnimation({\n//             container: props.animBox, // the dom element that will contain the animation\n//             renderer: 'svg',\n//             loop: true,\n//             autoplay: true,\n//             animationData: animationData // the path to the animation json\n//           });\n//     }, [])\n\n//     return (\n//         <motion.div\n//         className=\"container\"\n//         initial={{x: \"100vw\"}}\n//         animate={{x: 0}}\n//         exit={{x: \"-100vw\"}}\n//         >\n//         Contact\n//         <div style={{width: 400, margin: '0 auto'}} ref={props.animBox}></div>\n\n//         </motion.div>\n//     )\n// }\n\n// export default ContactView","import React from 'react'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport { AnimatePresence } from 'framer-motion'\nimport Header from './Components/Header'\nimport HomeView from './Views/HomeView'\nimport AboutView from './Views/AboutView'\nimport ContactView from './Views/ContactView'\nimport './App.css'\n\nfunction App() {\n\n    const location = useLocation()\n\n\n    return (\n        <div className=\"app\">\n          <Header/>\n          <AnimatePresence initial={true} exitBeforeEnter={true}>\n            <Switch location={location} key={location.pathname}>\n              <Route path=\"/\" component={HomeView} exact />\n              <Route path=\"/about\" component={AboutView} />\n              <Route path=\"/contact\" component={ContactView} />\n            </Switch>\n          </AnimatePresence>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}